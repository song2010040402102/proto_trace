import "protocol_base.proto";

package Lyingdragon.Protocol;

message C2S_TechnologyLoad {
        optional ProtocolType type = 1 [default = C_2_S_TECHNOLOGY_LOAD];
}

message S2C_TechnologyLoad {
        optional ProtocolType type = 1 [default = S_2_C_TECHNOLOGY_LOAD];
        optional int32 sum_point = 2;
        message Tech {
                optional int32 id = 1;
                optional int32 lvl = 2;
                optional int32 point = 3;
                optional int32 level_up_time = 4;
                optional int32 general_id = 5;
        }
        repeated Tech techs = 3;
}

message C2S_TechnologyLevelUp {
        optional ProtocolType type = 1 [default = C_2_S_TECHNOLOGY_LEVEL_UP];
        optional int32 id = 2;
        optional int32 general_id = 3;
}

message S2C_TechnologyLevelUp {
        optional ProtocolType type = 1 [default = S_2_C_TECHNOLOGY_LEVEL_UP];
        optional int32 ret = 2;
        optional int32 id = 3;
        optional int32 general_id = 4;
        optional int32 level_up_time = 5;
}

message C2S_TechnologyFinish {
        optional ProtocolType type = 1 [default = C_2_S_TECHNOLOGY_FINISH];
        optional int32 id = 2;
}

message S2C_TechnologyFinish {
        optional ProtocolType type = 1 [default = S_2_C_TECHNOLOGY_FINISH];
        optional int32 id = 2;
        optional int32 lvl = 3;
}

message C2S_TechnologyAllotPoint {
        optional ProtocolType type = 1 [default = C_2_S_TECHNOLOGY_ALLOT_POINT];
        optional int32 id = 2;
        optional int32 point = 3;
}

message S2C_TechnologyAllotPoint {
        optional ProtocolType type = 1 [default = S_2_C_TECHNOLOGY_ALLOT_POINT];
        optional int32 id = 2;
        optional int32 point = 3;
        optional int32 sum_point = 4;
        optional int32 ret = 5;
}

message C2S_TechnologyRecyclePoint {
        optional ProtocolType type = 1 [default = C_2_S_TECHNOLOGY_RECYCLE_POINT];
        optional int32 tech_type = 2; //0 all
}

message S2C_TechnologyRecyclePoint {
        optional ProtocolType type = 1 [default = S_2_C_TECHNOLOGY_RECYCLE_POINT];
        optional int32 ret = 2;
        optional int32 tech_type = 3;
        optional int32 sum_point = 4;
}

