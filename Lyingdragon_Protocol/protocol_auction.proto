import "protocol_base.proto";

package Lyingdragon.Protocol;

message CropAuctionItem {
        optional int32 id = 1;
        optional int32 temp_id = 2;
        optional int32 boss_id = 3;
        optional int32 state = 4;
        optional int32 left_time = 5;
        optional int64 current_role_id = 6;
        optional int32 current_price = 7;
}

message C2S_CropAuctionLoad {
        optional ProtocolType type = 1 [default = C_2_S_CROP_AUCTION_LOAD];
}

message S2C_CropAuctionLoad {
        optional ProtocolType type = 1 [default = S_2_C_CROP_AUCTION_LOAD];
        optional int32 ret = 2;
        optional int32 left_time = 3;
        optional int32 abouns = 4;
        repeated CropAuctionItem items = 5;
}

message C2S_CropAuctionBid {
        optional ProtocolType type = 1 [default = C_2_S_CROP_AUCTION_BID];
        optional int32 index = 2;
        optional int32 big_type = 3;
}

message S2C_CropAuctionBid {
        optional ProtocolType type = 1 [default = S_2_C_CROP_AUCTION_BID];
        optional int32 ret = 2;
        optional int32 index = 3;
        optional int32 big_type = 4;
        optional int32 abouns = 5;
        optional int32 current_price = 6;
        optional int32 state = 7;
}

message C2S_CropAuctionLog {
        optional ProtocolType type = 1 [default = C_2_S_CROP_AUCTION_LOG];
}

message S2C_CropAuctionLog {
        optional ProtocolType type = 1 [default = S_2_C_CROP_AUCTION_LOG];
        repeated int32 indexs = 2;
        optional int32 ret = 3;
}

message S2C_CropAuctionNotice {
        optional ProtocolType type = 1 [default = S_2_C_CROP_AUCTION_NOTICE];
        optional int32 abouns = 2;
        repeated CropAuctionItem items = 3;
}

message C2S_CropAuctionItem {
        optional ProtocolType type = 1 [default = C_2_S_CROP_AUCTION_ITEM];
        optional int32 index = 2;
}

message S2C_CropAuctionItem {
        optional ProtocolType type = 1 [default = S_2_C_CROP_AUCTION_ITEM];
        optional int32 index = 2;
        optional CropAuctionItem data = 3;
        optional int32 ret = 4;
}
